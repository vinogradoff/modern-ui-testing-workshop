plugins {
    id 'io.qameta.allure' version '2.8.1'
    id 'java'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileTestJava{
    options.encoding = 'UTF-8'
}
dependencies {
    testImplementation 'com.codeborne:selenide:5.22.3'
    testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.31'

    testImplementation 'io.qameta.allure:allure-selenide:2.14.0'
    //testImplementation 'io.qameta.allure:allure-junit5:2.14.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

allure {
    autoconfigure = true
    aspectjVersion = '1.9.4'
    version = '2.14.0'
    useJUnit5 {
        version = '2.14.0'
    }

}

test {
    useJUnitPlatform()

    systemProperty 'allure.link.tms.pattern','https://youtrack.jetbrains.com/issue/{}'
    systemProperty 'allure.link.issue.pattern','https://youtrack.jetbrains.com/issue/{}'

    systemProperty 'junit.jupiter.extensions.autodetection.enabled','true'

    systemProperties += System.properties.findAll
            { it.key.toString().startsWith("selenide.")}

    systemProperty 'junit.jupiter.execution.parallel.enabled','true'
    systemProperty 'junit.jupiter.execution.parallel.mode.default','concurrent'
    systemProperty 'junit.jupiter.execution.parallel.config.strategy','fixed'
    systemProperty 'junit.jupiter.execution.parallel.config.fixed.parallelism','2'

    // always run the tests, never use cached results
    inputs.property "start.test.time", LocalDateTime.now()

}